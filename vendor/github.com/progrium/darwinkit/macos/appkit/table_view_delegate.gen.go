// Code generated by DarwinKit. DO NOT EDIT.

package appkit

import (
	"github.com/progrium/darwinkit/macos/foundation"
	"github.com/progrium/darwinkit/objc"
)

// A set of optional methods you implement in a table view delegate to customize the behavior of the table view. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate?language=objc
type PTableViewDelegate interface {
	PControlTextEditingDelegate
	// optional
	TableViewTypeSelectStringForTableColumnRow(tableView TableView, tableColumn TableColumn, row int) string
	HasTableViewTypeSelectStringForTableColumnRow() bool

	// optional
	TableViewDataCellForTableColumnRow(tableView TableView, tableColumn TableColumn, row int) Cell
	HasTableViewDataCellForTableColumnRow() bool

	// optional
	TableViewNextTypeSelectMatchFromRowToRowForString(tableView TableView, startRow int, endRow int, searchString string) int
	HasTableViewNextTypeSelectMatchFromRowToRowForString() bool

	// optional
	TableViewIsGroupRow(tableView TableView, row int) bool
	HasTableViewIsGroupRow() bool

	// optional
	TableViewShouldShowCellExpansionForTableColumnRow(tableView TableView, tableColumn TableColumn, row int) bool
	HasTableViewShouldShowCellExpansionForTableColumnRow() bool

	// optional
	TableViewDidDragTableColumn(tableView TableView, tableColumn TableColumn)
	HasTableViewDidDragTableColumn() bool

	// optional
	SelectionShouldChangeInTableView(tableView TableView) bool
	HasSelectionShouldChangeInTableView() bool

	// optional
	TableViewViewForTableColumnRow(tableView TableView, tableColumn TableColumn, row int) View
	HasTableViewViewForTableColumnRow() bool

	// optional
	TableViewRowActionsForRowEdge(tableView TableView, row int, edge TableRowActionEdge) []TableViewRowAction
	HasTableViewRowActionsForRowEdge() bool

	// optional
	TableViewShouldTrackCellForTableColumnRow(tableView TableView, cell Cell, tableColumn TableColumn, row int) bool
	HasTableViewShouldTrackCellForTableColumnRow() bool

	// optional
	TableViewRowViewForRow(tableView TableView, row int) TableRowView
	HasTableViewRowViewForRow() bool

	// optional
	TableViewShouldEditTableColumnRow(tableView TableView, tableColumn TableColumn, row int) bool
	HasTableViewShouldEditTableColumnRow() bool

	// optional
	TableViewShouldSelectTableColumn(tableView TableView, tableColumn TableColumn) bool
	HasTableViewShouldSelectTableColumn() bool

	// optional
	TableViewSelectionIndexesForProposedSelection(tableView TableView, proposedSelectionIndexes foundation.IndexSet) foundation.IndexSet
	HasTableViewSelectionIndexesForProposedSelection() bool

	// optional
	TableViewDidAddRowViewForRow(tableView TableView, rowView TableRowView, row int)
	HasTableViewDidAddRowViewForRow() bool

	// optional
	TableViewDidClickTableColumn(tableView TableView, tableColumn TableColumn)
	HasTableViewDidClickTableColumn() bool

	// optional
	TableViewWillDisplayCellForTableColumnRow(tableView TableView, cell objc.Object, tableColumn TableColumn, row int)
	HasTableViewWillDisplayCellForTableColumnRow() bool

	// optional
	TableViewSizeToFitWidthOfColumn(tableView TableView, column int) float64
	HasTableViewSizeToFitWidthOfColumn() bool

	// optional
	TableViewShouldSelectRow(tableView TableView, row int) bool
	HasTableViewShouldSelectRow() bool

	// optional
	TableViewColumnDidMove(notification foundation.Notification)
	HasTableViewColumnDidMove() bool

	// optional
	TableViewSelectionIsChanging(notification foundation.Notification)
	HasTableViewSelectionIsChanging() bool

	// optional
	TableViewMouseDownInHeaderOfTableColumn(tableView TableView, tableColumn TableColumn)
	HasTableViewMouseDownInHeaderOfTableColumn() bool

	// optional
	TableViewDidRemoveRowViewForRow(tableView TableView, rowView TableRowView, row int)
	HasTableViewDidRemoveRowViewForRow() bool

	// optional
	TableViewShouldReorderColumnToColumn(tableView TableView, columnIndex int, newColumnIndex int) bool
	HasTableViewShouldReorderColumnToColumn() bool

	// optional
	TableViewSelectionDidChange(notification foundation.Notification)
	HasTableViewSelectionDidChange() bool

	// optional
	TableViewShouldTypeSelectForEventWithCurrentSearchString(tableView TableView, event Event, searchString string) bool
	HasTableViewShouldTypeSelectForEventWithCurrentSearchString() bool

	// optional
	TableViewToolTipForCellRectTableColumnRowMouseLocation(tableView TableView, cell Cell, rect foundation.RectPointer, tableColumn TableColumn, row int, mouseLocation foundation.Point) string
	HasTableViewToolTipForCellRectTableColumnRowMouseLocation() bool

	// optional
	TableViewColumnDidResize(notification foundation.Notification)
	HasTableViewColumnDidResize() bool

	// optional
	TableViewHeightOfRow(tableView TableView, row int) float64
	HasTableViewHeightOfRow() bool
}

// A delegate implementation builder for the [PTableViewDelegate] protocol.
type TableViewDelegate struct {
	ControlTextEditingDelegate
	_TableViewTypeSelectStringForTableColumnRow               func(tableView TableView, tableColumn TableColumn, row int) string
	_TableViewDataCellForTableColumnRow                       func(tableView TableView, tableColumn TableColumn, row int) Cell
	_TableViewNextTypeSelectMatchFromRowToRowForString        func(tableView TableView, startRow int, endRow int, searchString string) int
	_TableViewIsGroupRow                                      func(tableView TableView, row int) bool
	_TableViewShouldShowCellExpansionForTableColumnRow        func(tableView TableView, tableColumn TableColumn, row int) bool
	_TableViewDidDragTableColumn                              func(tableView TableView, tableColumn TableColumn)
	_SelectionShouldChangeInTableView                         func(tableView TableView) bool
	_TableViewViewForTableColumnRow                           func(tableView TableView, tableColumn TableColumn, row int) View
	_TableViewRowActionsForRowEdge                            func(tableView TableView, row int, edge TableRowActionEdge) []TableViewRowAction
	_TableViewShouldTrackCellForTableColumnRow                func(tableView TableView, cell Cell, tableColumn TableColumn, row int) bool
	_TableViewRowViewForRow                                   func(tableView TableView, row int) TableRowView
	_TableViewShouldEditTableColumnRow                        func(tableView TableView, tableColumn TableColumn, row int) bool
	_TableViewShouldSelectTableColumn                         func(tableView TableView, tableColumn TableColumn) bool
	_TableViewSelectionIndexesForProposedSelection            func(tableView TableView, proposedSelectionIndexes foundation.IndexSet) foundation.IndexSet
	_TableViewDidAddRowViewForRow                             func(tableView TableView, rowView TableRowView, row int)
	_TableViewDidClickTableColumn                             func(tableView TableView, tableColumn TableColumn)
	_TableViewWillDisplayCellForTableColumnRow                func(tableView TableView, cell objc.Object, tableColumn TableColumn, row int)
	_TableViewSizeToFitWidthOfColumn                          func(tableView TableView, column int) float64
	_TableViewShouldSelectRow                                 func(tableView TableView, row int) bool
	_TableViewColumnDidMove                                   func(notification foundation.Notification)
	_TableViewSelectionIsChanging                             func(notification foundation.Notification)
	_TableViewMouseDownInHeaderOfTableColumn                  func(tableView TableView, tableColumn TableColumn)
	_TableViewDidRemoveRowViewForRow                          func(tableView TableView, rowView TableRowView, row int)
	_TableViewShouldReorderColumnToColumn                     func(tableView TableView, columnIndex int, newColumnIndex int) bool
	_TableViewSelectionDidChange                              func(notification foundation.Notification)
	_TableViewShouldTypeSelectForEventWithCurrentSearchString func(tableView TableView, event Event, searchString string) bool
	_TableViewToolTipForCellRectTableColumnRowMouseLocation   func(tableView TableView, cell Cell, rect foundation.RectPointer, tableColumn TableColumn, row int, mouseLocation foundation.Point) string
	_TableViewColumnDidResize                                 func(notification foundation.Notification)
	_TableViewHeightOfRow                                     func(tableView TableView, row int) float64
}

func (di *TableViewDelegate) HasTableViewTypeSelectStringForTableColumnRow() bool {
	return di._TableViewTypeSelectStringForTableColumnRow != nil
}

// Asks the delegate to provide an alternative text value used for type selection for the specified row and column. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1530001-tableview?language=objc
func (di *TableViewDelegate) SetTableViewTypeSelectStringForTableColumnRow(f func(tableView TableView, tableColumn TableColumn, row int) string) {
	di._TableViewTypeSelectStringForTableColumnRow = f
}

// Asks the delegate to provide an alternative text value used for type selection for the specified row and column. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1530001-tableview?language=objc
func (di *TableViewDelegate) TableViewTypeSelectStringForTableColumnRow(tableView TableView, tableColumn TableColumn, row int) string {
	return di._TableViewTypeSelectStringForTableColumnRow(tableView, tableColumn, row)
}
func (di *TableViewDelegate) HasTableViewDataCellForTableColumnRow() bool {
	return di._TableViewDataCellForTableColumnRow != nil
}

// Asks the delegate for a custom data cell for the specified row and column. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1529321-tableview?language=objc
func (di *TableViewDelegate) SetTableViewDataCellForTableColumnRow(f func(tableView TableView, tableColumn TableColumn, row int) Cell) {
	di._TableViewDataCellForTableColumnRow = f
}

// Asks the delegate for a custom data cell for the specified row and column. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1529321-tableview?language=objc
func (di *TableViewDelegate) TableViewDataCellForTableColumnRow(tableView TableView, tableColumn TableColumn, row int) Cell {
	return di._TableViewDataCellForTableColumnRow(tableView, tableColumn, row)
}
func (di *TableViewDelegate) HasTableViewNextTypeSelectMatchFromRowToRowForString() bool {
	return di._TableViewNextTypeSelectMatchFromRowToRowForString != nil
}

// Asks the delegate for the row within the specified search range that matches the specified string. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1534757-tableview?language=objc
func (di *TableViewDelegate) SetTableViewNextTypeSelectMatchFromRowToRowForString(f func(tableView TableView, startRow int, endRow int, searchString string) int) {
	di._TableViewNextTypeSelectMatchFromRowToRowForString = f
}

// Asks the delegate for the row within the specified search range that matches the specified string. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1534757-tableview?language=objc
func (di *TableViewDelegate) TableViewNextTypeSelectMatchFromRowToRowForString(tableView TableView, startRow int, endRow int, searchString string) int {
	return di._TableViewNextTypeSelectMatchFromRowToRowForString(tableView, startRow, endRow, searchString)
}
func (di *TableViewDelegate) HasTableViewIsGroupRow() bool {
	return di._TableViewIsGroupRow != nil
}

// Returns whether the specified row is a group row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1526676-tableview?language=objc
func (di *TableViewDelegate) SetTableViewIsGroupRow(f func(tableView TableView, row int) bool) {
	di._TableViewIsGroupRow = f
}

// Returns whether the specified row is a group row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1526676-tableview?language=objc
func (di *TableViewDelegate) TableViewIsGroupRow(tableView TableView, row int) bool {
	return di._TableViewIsGroupRow(tableView, row)
}
func (di *TableViewDelegate) HasTableViewShouldShowCellExpansionForTableColumnRow() bool {
	return di._TableViewShouldShowCellExpansionForTableColumnRow != nil
}

// Asks the delegate if an expansion tooltip should be displayed for a specific row and column. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1535567-tableview?language=objc
func (di *TableViewDelegate) SetTableViewShouldShowCellExpansionForTableColumnRow(f func(tableView TableView, tableColumn TableColumn, row int) bool) {
	di._TableViewShouldShowCellExpansionForTableColumnRow = f
}

// Asks the delegate if an expansion tooltip should be displayed for a specific row and column. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1535567-tableview?language=objc
func (di *TableViewDelegate) TableViewShouldShowCellExpansionForTableColumnRow(tableView TableView, tableColumn TableColumn, row int) bool {
	return di._TableViewShouldShowCellExpansionForTableColumnRow(tableView, tableColumn, row)
}
func (di *TableViewDelegate) HasTableViewDidDragTableColumn() bool {
	return di._TableViewDidDragTableColumn != nil
}

// Tells the delegate that the specified table column was dragged. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1535732-tableview?language=objc
func (di *TableViewDelegate) SetTableViewDidDragTableColumn(f func(tableView TableView, tableColumn TableColumn)) {
	di._TableViewDidDragTableColumn = f
}

// Tells the delegate that the specified table column was dragged. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1535732-tableview?language=objc
func (di *TableViewDelegate) TableViewDidDragTableColumn(tableView TableView, tableColumn TableColumn) {
	di._TableViewDidDragTableColumn(tableView, tableColumn)
}
func (di *TableViewDelegate) HasSelectionShouldChangeInTableView() bool {
	return di._SelectionShouldChangeInTableView != nil
}

// Asks the delegate if the user is allowed to change the selection. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1533949-selectionshouldchangeintableview?language=objc
func (di *TableViewDelegate) SetSelectionShouldChangeInTableView(f func(tableView TableView) bool) {
	di._SelectionShouldChangeInTableView = f
}

// Asks the delegate if the user is allowed to change the selection. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1533949-selectionshouldchangeintableview?language=objc
func (di *TableViewDelegate) SelectionShouldChangeInTableView(tableView TableView) bool {
	return di._SelectionShouldChangeInTableView(tableView)
}
func (di *TableViewDelegate) HasTableViewViewForTableColumnRow() bool {
	return di._TableViewViewForTableColumnRow != nil
}

// Asks the delegate for a view to display the specified row and column. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1527449-tableview?language=objc
func (di *TableViewDelegate) SetTableViewViewForTableColumnRow(f func(tableView TableView, tableColumn TableColumn, row int) View) {
	di._TableViewViewForTableColumnRow = f
}

// Asks the delegate for a view to display the specified row and column. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1527449-tableview?language=objc
func (di *TableViewDelegate) TableViewViewForTableColumnRow(tableView TableView, tableColumn TableColumn, row int) View {
	return di._TableViewViewForTableColumnRow(tableView, tableColumn, row)
}
func (di *TableViewDelegate) HasTableViewRowActionsForRowEdge() bool {
	return di._TableViewRowActionsForRowEdge != nil
}

// Asks the delegate to provide an array of row actions to be attached to the specified edge of a table row and displayed when the user swipes horizontally across the row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1532060-tableview?language=objc
func (di *TableViewDelegate) SetTableViewRowActionsForRowEdge(f func(tableView TableView, row int, edge TableRowActionEdge) []TableViewRowAction) {
	di._TableViewRowActionsForRowEdge = f
}

// Asks the delegate to provide an array of row actions to be attached to the specified edge of a table row and displayed when the user swipes horizontally across the row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1532060-tableview?language=objc
func (di *TableViewDelegate) TableViewRowActionsForRowEdge(tableView TableView, row int, edge TableRowActionEdge) []TableViewRowAction {
	return di._TableViewRowActionsForRowEdge(tableView, row, edge)
}
func (di *TableViewDelegate) HasTableViewShouldTrackCellForTableColumnRow() bool {
	return di._TableViewShouldTrackCellForTableColumnRow != nil
}

// Asks the delegate whether the specified cell should be tracked. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1533564-tableview?language=objc
func (di *TableViewDelegate) SetTableViewShouldTrackCellForTableColumnRow(f func(tableView TableView, cell Cell, tableColumn TableColumn, row int) bool) {
	di._TableViewShouldTrackCellForTableColumnRow = f
}

// Asks the delegate whether the specified cell should be tracked. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1533564-tableview?language=objc
func (di *TableViewDelegate) TableViewShouldTrackCellForTableColumnRow(tableView TableView, cell Cell, tableColumn TableColumn, row int) bool {
	return di._TableViewShouldTrackCellForTableColumnRow(tableView, cell, tableColumn, row)
}
func (di *TableViewDelegate) HasTableViewRowViewForRow() bool {
	return di._TableViewRowViewForRow != nil
}

// Asks the delegate for a view to display the specified row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1532417-tableview?language=objc
func (di *TableViewDelegate) SetTableViewRowViewForRow(f func(tableView TableView, row int) TableRowView) {
	di._TableViewRowViewForRow = f
}

// Asks the delegate for a view to display the specified row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1532417-tableview?language=objc
func (di *TableViewDelegate) TableViewRowViewForRow(tableView TableView, row int) TableRowView {
	return di._TableViewRowViewForRow(tableView, row)
}
func (di *TableViewDelegate) HasTableViewShouldEditTableColumnRow() bool {
	return di._TableViewShouldEditTableColumnRow != nil
}

// Asks the delegate if the cell at the specified row and column can be edited. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1527305-tableview?language=objc
func (di *TableViewDelegate) SetTableViewShouldEditTableColumnRow(f func(tableView TableView, tableColumn TableColumn, row int) bool) {
	di._TableViewShouldEditTableColumnRow = f
}

// Asks the delegate if the cell at the specified row and column can be edited. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1527305-tableview?language=objc
func (di *TableViewDelegate) TableViewShouldEditTableColumnRow(tableView TableView, tableColumn TableColumn, row int) bool {
	return di._TableViewShouldEditTableColumnRow(tableView, tableColumn, row)
}
func (di *TableViewDelegate) HasTableViewShouldSelectTableColumn() bool {
	return di._TableViewShouldSelectTableColumn != nil
}

// Asks the delegate whether the specified table column can be selected. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1527204-tableview?language=objc
func (di *TableViewDelegate) SetTableViewShouldSelectTableColumn(f func(tableView TableView, tableColumn TableColumn) bool) {
	di._TableViewShouldSelectTableColumn = f
}

// Asks the delegate whether the specified table column can be selected. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1527204-tableview?language=objc
func (di *TableViewDelegate) TableViewShouldSelectTableColumn(tableView TableView, tableColumn TableColumn) bool {
	return di._TableViewShouldSelectTableColumn(tableView, tableColumn)
}
func (di *TableViewDelegate) HasTableViewSelectionIndexesForProposedSelection() bool {
	return di._TableViewSelectionIndexesForProposedSelection != nil
}

// Asks the delegate to accept or reject the proposed selection. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1532829-tableview?language=objc
func (di *TableViewDelegate) SetTableViewSelectionIndexesForProposedSelection(f func(tableView TableView, proposedSelectionIndexes foundation.IndexSet) foundation.IndexSet) {
	di._TableViewSelectionIndexesForProposedSelection = f
}

// Asks the delegate to accept or reject the proposed selection. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1532829-tableview?language=objc
func (di *TableViewDelegate) TableViewSelectionIndexesForProposedSelection(tableView TableView, proposedSelectionIndexes foundation.IndexSet) foundation.IndexSet {
	return di._TableViewSelectionIndexesForProposedSelection(tableView, proposedSelectionIndexes)
}
func (di *TableViewDelegate) HasTableViewDidAddRowViewForRow() bool {
	return di._TableViewDidAddRowViewForRow != nil
}

// Tells the delegate that a row view was added at the specified row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1527434-tableview?language=objc
func (di *TableViewDelegate) SetTableViewDidAddRowViewForRow(f func(tableView TableView, rowView TableRowView, row int)) {
	di._TableViewDidAddRowViewForRow = f
}

// Tells the delegate that a row view was added at the specified row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1527434-tableview?language=objc
func (di *TableViewDelegate) TableViewDidAddRowViewForRow(tableView TableView, rowView TableRowView, row int) {
	di._TableViewDidAddRowViewForRow(tableView, rowView, row)
}
func (di *TableViewDelegate) HasTableViewDidClickTableColumn() bool {
	return di._TableViewDidClickTableColumn != nil
}

// Tells the delegate that the mouse button was clicked in the specified table column, but the column was not dragged. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1533923-tableview?language=objc
func (di *TableViewDelegate) SetTableViewDidClickTableColumn(f func(tableView TableView, tableColumn TableColumn)) {
	di._TableViewDidClickTableColumn = f
}

// Tells the delegate that the mouse button was clicked in the specified table column, but the column was not dragged. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1533923-tableview?language=objc
func (di *TableViewDelegate) TableViewDidClickTableColumn(tableView TableView, tableColumn TableColumn) {
	di._TableViewDidClickTableColumn(tableView, tableColumn)
}
func (di *TableViewDelegate) HasTableViewWillDisplayCellForTableColumnRow() bool {
	return di._TableViewWillDisplayCellForTableColumnRow != nil
}

// Tells the delegate that the table view will display the specified cell at the specified row and column. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1533829-tableview?language=objc
func (di *TableViewDelegate) SetTableViewWillDisplayCellForTableColumnRow(f func(tableView TableView, cell objc.Object, tableColumn TableColumn, row int)) {
	di._TableViewWillDisplayCellForTableColumnRow = f
}

// Tells the delegate that the table view will display the specified cell at the specified row and column. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1533829-tableview?language=objc
func (di *TableViewDelegate) TableViewWillDisplayCellForTableColumnRow(tableView TableView, cell objc.Object, tableColumn TableColumn, row int) {
	di._TableViewWillDisplayCellForTableColumnRow(tableView, cell, tableColumn, row)
}
func (di *TableViewDelegate) HasTableViewSizeToFitWidthOfColumn() bool {
	return di._TableViewSizeToFitWidthOfColumn != nil
}

// Asks the delegate to provide custom sizing behavior when a column’s resize divider is double clicked. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1526429-tableview?language=objc
func (di *TableViewDelegate) SetTableViewSizeToFitWidthOfColumn(f func(tableView TableView, column int) float64) {
	di._TableViewSizeToFitWidthOfColumn = f
}

// Asks the delegate to provide custom sizing behavior when a column’s resize divider is double clicked. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1526429-tableview?language=objc
func (di *TableViewDelegate) TableViewSizeToFitWidthOfColumn(tableView TableView, column int) float64 {
	return di._TableViewSizeToFitWidthOfColumn(tableView, column)
}
func (di *TableViewDelegate) HasTableViewShouldSelectRow() bool {
	return di._TableViewShouldSelectRow != nil
}

// Asks the delegate if the table view should allow selection of the specified row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1526916-tableview?language=objc
func (di *TableViewDelegate) SetTableViewShouldSelectRow(f func(tableView TableView, row int) bool) {
	di._TableViewShouldSelectRow = f
}

// Asks the delegate if the table view should allow selection of the specified row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1526916-tableview?language=objc
func (di *TableViewDelegate) TableViewShouldSelectRow(tableView TableView, row int) bool {
	return di._TableViewShouldSelectRow(tableView, row)
}
func (di *TableViewDelegate) HasTableViewColumnDidMove() bool {
	return di._TableViewColumnDidMove != nil
}

// Tells the delegate that a table column was moved by user action. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1534237-tableviewcolumndidmove?language=objc
func (di *TableViewDelegate) SetTableViewColumnDidMove(f func(notification foundation.Notification)) {
	di._TableViewColumnDidMove = f
}

// Tells the delegate that a table column was moved by user action. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1534237-tableviewcolumndidmove?language=objc
func (di *TableViewDelegate) TableViewColumnDidMove(notification foundation.Notification) {
	di._TableViewColumnDidMove(notification)
}
func (di *TableViewDelegate) HasTableViewSelectionIsChanging() bool {
	return di._TableViewSelectionIsChanging != nil
}

// Tells the delegate that the table view’s selection is in the process of changing. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1530812-tableviewselectionischanging?language=objc
func (di *TableViewDelegate) SetTableViewSelectionIsChanging(f func(notification foundation.Notification)) {
	di._TableViewSelectionIsChanging = f
}

// Tells the delegate that the table view’s selection is in the process of changing. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1530812-tableviewselectionischanging?language=objc
func (di *TableViewDelegate) TableViewSelectionIsChanging(notification foundation.Notification) {
	di._TableViewSelectionIsChanging(notification)
}
func (di *TableViewDelegate) HasTableViewMouseDownInHeaderOfTableColumn() bool {
	return di._TableViewMouseDownInHeaderOfTableColumn != nil
}

// Tells the delegate that the mouse button was clicked in the specified table column’s header. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1531711-tableview?language=objc
func (di *TableViewDelegate) SetTableViewMouseDownInHeaderOfTableColumn(f func(tableView TableView, tableColumn TableColumn)) {
	di._TableViewMouseDownInHeaderOfTableColumn = f
}

// Tells the delegate that the mouse button was clicked in the specified table column’s header. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1531711-tableview?language=objc
func (di *TableViewDelegate) TableViewMouseDownInHeaderOfTableColumn(tableView TableView, tableColumn TableColumn) {
	di._TableViewMouseDownInHeaderOfTableColumn(tableView, tableColumn)
}
func (di *TableViewDelegate) HasTableViewDidRemoveRowViewForRow() bool {
	return di._TableViewDidRemoveRowViewForRow != nil
}

// Tells the delegate that a row view was removed from the table at the specified row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1528674-tableview?language=objc
func (di *TableViewDelegate) SetTableViewDidRemoveRowViewForRow(f func(tableView TableView, rowView TableRowView, row int)) {
	di._TableViewDidRemoveRowViewForRow = f
}

// Tells the delegate that a row view was removed from the table at the specified row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1528674-tableview?language=objc
func (di *TableViewDelegate) TableViewDidRemoveRowViewForRow(tableView TableView, rowView TableRowView, row int) {
	di._TableViewDidRemoveRowViewForRow(tableView, rowView, row)
}
func (di *TableViewDelegate) HasTableViewShouldReorderColumnToColumn() bool {
	return di._TableViewShouldReorderColumnToColumn != nil
}

// Asks the delegate to allow or prohibit the specified column to be dragged to a new location. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1534434-tableview?language=objc
func (di *TableViewDelegate) SetTableViewShouldReorderColumnToColumn(f func(tableView TableView, columnIndex int, newColumnIndex int) bool) {
	di._TableViewShouldReorderColumnToColumn = f
}

// Asks the delegate to allow or prohibit the specified column to be dragged to a new location. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1534434-tableview?language=objc
func (di *TableViewDelegate) TableViewShouldReorderColumnToColumn(tableView TableView, columnIndex int, newColumnIndex int) bool {
	return di._TableViewShouldReorderColumnToColumn(tableView, columnIndex, newColumnIndex)
}
func (di *TableViewDelegate) HasTableViewSelectionDidChange() bool {
	return di._TableViewSelectionDidChange != nil
}

// Tells the delegate that the table view’s selection has changed. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1528567-tableviewselectiondidchange?language=objc
func (di *TableViewDelegate) SetTableViewSelectionDidChange(f func(notification foundation.Notification)) {
	di._TableViewSelectionDidChange = f
}

// Tells the delegate that the table view’s selection has changed. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1528567-tableviewselectiondidchange?language=objc
func (di *TableViewDelegate) TableViewSelectionDidChange(notification foundation.Notification) {
	di._TableViewSelectionDidChange(notification)
}
func (di *TableViewDelegate) HasTableViewShouldTypeSelectForEventWithCurrentSearchString() bool {
	return di._TableViewShouldTypeSelectForEventWithCurrentSearchString != nil
}

// Asks the delegate to allow or deny type select for the specified event and current search string. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1526347-tableview?language=objc
func (di *TableViewDelegate) SetTableViewShouldTypeSelectForEventWithCurrentSearchString(f func(tableView TableView, event Event, searchString string) bool) {
	di._TableViewShouldTypeSelectForEventWithCurrentSearchString = f
}

// Asks the delegate to allow or deny type select for the specified event and current search string. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1526347-tableview?language=objc
func (di *TableViewDelegate) TableViewShouldTypeSelectForEventWithCurrentSearchString(tableView TableView, event Event, searchString string) bool {
	return di._TableViewShouldTypeSelectForEventWithCurrentSearchString(tableView, event, searchString)
}
func (di *TableViewDelegate) HasTableViewToolTipForCellRectTableColumnRowMouseLocation() bool {
	return di._TableViewToolTipForCellRectTableColumnRowMouseLocation != nil
}

// Asks the delegate for a string to display in a tooltip for the specified cell in the column and row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1526097-tableview?language=objc
func (di *TableViewDelegate) SetTableViewToolTipForCellRectTableColumnRowMouseLocation(f func(tableView TableView, cell Cell, rect foundation.RectPointer, tableColumn TableColumn, row int, mouseLocation foundation.Point) string) {
	di._TableViewToolTipForCellRectTableColumnRowMouseLocation = f
}

// Asks the delegate for a string to display in a tooltip for the specified cell in the column and row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1526097-tableview?language=objc
func (di *TableViewDelegate) TableViewToolTipForCellRectTableColumnRowMouseLocation(tableView TableView, cell Cell, rect foundation.RectPointer, tableColumn TableColumn, row int, mouseLocation foundation.Point) string {
	return di._TableViewToolTipForCellRectTableColumnRowMouseLocation(tableView, cell, rect, tableColumn, row, mouseLocation)
}
func (di *TableViewDelegate) HasTableViewColumnDidResize() bool {
	return di._TableViewColumnDidResize != nil
}

// Tells the delegate that a table column was resized. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1535901-tableviewcolumndidresize?language=objc
func (di *TableViewDelegate) SetTableViewColumnDidResize(f func(notification foundation.Notification)) {
	di._TableViewColumnDidResize = f
}

// Tells the delegate that a table column was resized. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1535901-tableviewcolumndidresize?language=objc
func (di *TableViewDelegate) TableViewColumnDidResize(notification foundation.Notification) {
	di._TableViewColumnDidResize(notification)
}
func (di *TableViewDelegate) HasTableViewHeightOfRow() bool {
	return di._TableViewHeightOfRow != nil
}

// Asks the delegate for the height of the specified row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1529684-tableview?language=objc
func (di *TableViewDelegate) SetTableViewHeightOfRow(f func(tableView TableView, row int) float64) {
	di._TableViewHeightOfRow = f
}

// Asks the delegate for the height of the specified row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1529684-tableview?language=objc
func (di *TableViewDelegate) TableViewHeightOfRow(tableView TableView, row int) float64 {
	return di._TableViewHeightOfRow(tableView, row)
}

// ensure impl type implements protocol interface
var _ PTableViewDelegate = (*TableViewDelegateObject)(nil)

// A concrete type for the [PTableViewDelegate] protocol.
type TableViewDelegateObject struct {
	ControlTextEditingDelegateObject
}

func (t_ TableViewDelegateObject) HasTableViewTypeSelectStringForTableColumnRow() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:typeSelectStringForTableColumn:row:"))
}

// Asks the delegate to provide an alternative text value used for type selection for the specified row and column. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1530001-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewTypeSelectStringForTableColumnRow(tableView TableView, tableColumn TableColumn, row int) string {
	rv := objc.Call[string](t_, objc.Sel("tableView:typeSelectStringForTableColumn:row:"), tableView, tableColumn, row)
	return rv
}

func (t_ TableViewDelegateObject) HasTableViewDataCellForTableColumnRow() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:dataCellForTableColumn:row:"))
}

// Asks the delegate for a custom data cell for the specified row and column. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1529321-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewDataCellForTableColumnRow(tableView TableView, tableColumn TableColumn, row int) Cell {
	rv := objc.Call[Cell](t_, objc.Sel("tableView:dataCellForTableColumn:row:"), tableView, tableColumn, row)
	return rv
}

func (t_ TableViewDelegateObject) HasTableViewNextTypeSelectMatchFromRowToRowForString() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:nextTypeSelectMatchFromRow:toRow:forString:"))
}

// Asks the delegate for the row within the specified search range that matches the specified string. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1534757-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewNextTypeSelectMatchFromRowToRowForString(tableView TableView, startRow int, endRow int, searchString string) int {
	rv := objc.Call[int](t_, objc.Sel("tableView:nextTypeSelectMatchFromRow:toRow:forString:"), tableView, startRow, endRow, searchString)
	return rv
}

func (t_ TableViewDelegateObject) HasTableViewIsGroupRow() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:isGroupRow:"))
}

// Returns whether the specified row is a group row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1526676-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewIsGroupRow(tableView TableView, row int) bool {
	rv := objc.Call[bool](t_, objc.Sel("tableView:isGroupRow:"), tableView, row)
	return rv
}

func (t_ TableViewDelegateObject) HasTableViewShouldShowCellExpansionForTableColumnRow() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:shouldShowCellExpansionForTableColumn:row:"))
}

// Asks the delegate if an expansion tooltip should be displayed for a specific row and column. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1535567-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewShouldShowCellExpansionForTableColumnRow(tableView TableView, tableColumn TableColumn, row int) bool {
	rv := objc.Call[bool](t_, objc.Sel("tableView:shouldShowCellExpansionForTableColumn:row:"), tableView, tableColumn, row)
	return rv
}

func (t_ TableViewDelegateObject) HasTableViewDidDragTableColumn() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:didDragTableColumn:"))
}

// Tells the delegate that the specified table column was dragged. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1535732-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewDidDragTableColumn(tableView TableView, tableColumn TableColumn) {
	objc.Call[objc.Void](t_, objc.Sel("tableView:didDragTableColumn:"), tableView, tableColumn)
}

func (t_ TableViewDelegateObject) HasSelectionShouldChangeInTableView() bool {
	return t_.RespondsToSelector(objc.Sel("selectionShouldChangeInTableView:"))
}

// Asks the delegate if the user is allowed to change the selection. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1533949-selectionshouldchangeintableview?language=objc
func (t_ TableViewDelegateObject) SelectionShouldChangeInTableView(tableView TableView) bool {
	rv := objc.Call[bool](t_, objc.Sel("selectionShouldChangeInTableView:"), tableView)
	return rv
}

func (t_ TableViewDelegateObject) HasTableViewViewForTableColumnRow() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:viewForTableColumn:row:"))
}

// Asks the delegate for a view to display the specified row and column. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1527449-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewViewForTableColumnRow(tableView TableView, tableColumn TableColumn, row int) View {
	rv := objc.Call[View](t_, objc.Sel("tableView:viewForTableColumn:row:"), tableView, tableColumn, row)
	return rv
}

func (t_ TableViewDelegateObject) HasTableViewRowActionsForRowEdge() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:rowActionsForRow:edge:"))
}

// Asks the delegate to provide an array of row actions to be attached to the specified edge of a table row and displayed when the user swipes horizontally across the row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1532060-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewRowActionsForRowEdge(tableView TableView, row int, edge TableRowActionEdge) []TableViewRowAction {
	rv := objc.Call[[]TableViewRowAction](t_, objc.Sel("tableView:rowActionsForRow:edge:"), tableView, row, edge)
	return rv
}

func (t_ TableViewDelegateObject) HasTableViewShouldTrackCellForTableColumnRow() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:shouldTrackCell:forTableColumn:row:"))
}

// Asks the delegate whether the specified cell should be tracked. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1533564-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewShouldTrackCellForTableColumnRow(tableView TableView, cell Cell, tableColumn TableColumn, row int) bool {
	rv := objc.Call[bool](t_, objc.Sel("tableView:shouldTrackCell:forTableColumn:row:"), tableView, cell, tableColumn, row)
	return rv
}

func (t_ TableViewDelegateObject) HasTableViewRowViewForRow() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:rowViewForRow:"))
}

// Asks the delegate for a view to display the specified row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1532417-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewRowViewForRow(tableView TableView, row int) TableRowView {
	rv := objc.Call[TableRowView](t_, objc.Sel("tableView:rowViewForRow:"), tableView, row)
	return rv
}

func (t_ TableViewDelegateObject) HasTableViewShouldEditTableColumnRow() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:shouldEditTableColumn:row:"))
}

// Asks the delegate if the cell at the specified row and column can be edited. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1527305-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewShouldEditTableColumnRow(tableView TableView, tableColumn TableColumn, row int) bool {
	rv := objc.Call[bool](t_, objc.Sel("tableView:shouldEditTableColumn:row:"), tableView, tableColumn, row)
	return rv
}

func (t_ TableViewDelegateObject) HasTableViewShouldSelectTableColumn() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:shouldSelectTableColumn:"))
}

// Asks the delegate whether the specified table column can be selected. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1527204-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewShouldSelectTableColumn(tableView TableView, tableColumn TableColumn) bool {
	rv := objc.Call[bool](t_, objc.Sel("tableView:shouldSelectTableColumn:"), tableView, tableColumn)
	return rv
}

func (t_ TableViewDelegateObject) HasTableViewSelectionIndexesForProposedSelection() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:selectionIndexesForProposedSelection:"))
}

// Asks the delegate to accept or reject the proposed selection. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1532829-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewSelectionIndexesForProposedSelection(tableView TableView, proposedSelectionIndexes foundation.IndexSet) foundation.IndexSet {
	rv := objc.Call[foundation.IndexSet](t_, objc.Sel("tableView:selectionIndexesForProposedSelection:"), tableView, proposedSelectionIndexes)
	return rv
}

func (t_ TableViewDelegateObject) HasTableViewDidAddRowViewForRow() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:didAddRowView:forRow:"))
}

// Tells the delegate that a row view was added at the specified row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1527434-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewDidAddRowViewForRow(tableView TableView, rowView TableRowView, row int) {
	objc.Call[objc.Void](t_, objc.Sel("tableView:didAddRowView:forRow:"), tableView, rowView, row)
}

func (t_ TableViewDelegateObject) HasTableViewDidClickTableColumn() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:didClickTableColumn:"))
}

// Tells the delegate that the mouse button was clicked in the specified table column, but the column was not dragged. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1533923-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewDidClickTableColumn(tableView TableView, tableColumn TableColumn) {
	objc.Call[objc.Void](t_, objc.Sel("tableView:didClickTableColumn:"), tableView, tableColumn)
}

func (t_ TableViewDelegateObject) HasTableViewWillDisplayCellForTableColumnRow() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:willDisplayCell:forTableColumn:row:"))
}

// Tells the delegate that the table view will display the specified cell at the specified row and column. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1533829-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewWillDisplayCellForTableColumnRow(tableView TableView, cell objc.Object, tableColumn TableColumn, row int) {
	objc.Call[objc.Void](t_, objc.Sel("tableView:willDisplayCell:forTableColumn:row:"), tableView, cell, tableColumn, row)
}

func (t_ TableViewDelegateObject) HasTableViewSizeToFitWidthOfColumn() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:sizeToFitWidthOfColumn:"))
}

// Asks the delegate to provide custom sizing behavior when a column’s resize divider is double clicked. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1526429-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewSizeToFitWidthOfColumn(tableView TableView, column int) float64 {
	rv := objc.Call[float64](t_, objc.Sel("tableView:sizeToFitWidthOfColumn:"), tableView, column)
	return rv
}

func (t_ TableViewDelegateObject) HasTableViewShouldSelectRow() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:shouldSelectRow:"))
}

// Asks the delegate if the table view should allow selection of the specified row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1526916-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewShouldSelectRow(tableView TableView, row int) bool {
	rv := objc.Call[bool](t_, objc.Sel("tableView:shouldSelectRow:"), tableView, row)
	return rv
}

func (t_ TableViewDelegateObject) HasTableViewColumnDidMove() bool {
	return t_.RespondsToSelector(objc.Sel("tableViewColumnDidMove:"))
}

// Tells the delegate that a table column was moved by user action. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1534237-tableviewcolumndidmove?language=objc
func (t_ TableViewDelegateObject) TableViewColumnDidMove(notification foundation.Notification) {
	objc.Call[objc.Void](t_, objc.Sel("tableViewColumnDidMove:"), notification)
}

func (t_ TableViewDelegateObject) HasTableViewSelectionIsChanging() bool {
	return t_.RespondsToSelector(objc.Sel("tableViewSelectionIsChanging:"))
}

// Tells the delegate that the table view’s selection is in the process of changing. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1530812-tableviewselectionischanging?language=objc
func (t_ TableViewDelegateObject) TableViewSelectionIsChanging(notification foundation.Notification) {
	objc.Call[objc.Void](t_, objc.Sel("tableViewSelectionIsChanging:"), notification)
}

func (t_ TableViewDelegateObject) HasTableViewMouseDownInHeaderOfTableColumn() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:mouseDownInHeaderOfTableColumn:"))
}

// Tells the delegate that the mouse button was clicked in the specified table column’s header. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1531711-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewMouseDownInHeaderOfTableColumn(tableView TableView, tableColumn TableColumn) {
	objc.Call[objc.Void](t_, objc.Sel("tableView:mouseDownInHeaderOfTableColumn:"), tableView, tableColumn)
}

func (t_ TableViewDelegateObject) HasTableViewDidRemoveRowViewForRow() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:didRemoveRowView:forRow:"))
}

// Tells the delegate that a row view was removed from the table at the specified row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1528674-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewDidRemoveRowViewForRow(tableView TableView, rowView TableRowView, row int) {
	objc.Call[objc.Void](t_, objc.Sel("tableView:didRemoveRowView:forRow:"), tableView, rowView, row)
}

func (t_ TableViewDelegateObject) HasTableViewShouldReorderColumnToColumn() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:shouldReorderColumn:toColumn:"))
}

// Asks the delegate to allow or prohibit the specified column to be dragged to a new location. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1534434-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewShouldReorderColumnToColumn(tableView TableView, columnIndex int, newColumnIndex int) bool {
	rv := objc.Call[bool](t_, objc.Sel("tableView:shouldReorderColumn:toColumn:"), tableView, columnIndex, newColumnIndex)
	return rv
}

func (t_ TableViewDelegateObject) HasTableViewSelectionDidChange() bool {
	return t_.RespondsToSelector(objc.Sel("tableViewSelectionDidChange:"))
}

// Tells the delegate that the table view’s selection has changed. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1528567-tableviewselectiondidchange?language=objc
func (t_ TableViewDelegateObject) TableViewSelectionDidChange(notification foundation.Notification) {
	objc.Call[objc.Void](t_, objc.Sel("tableViewSelectionDidChange:"), notification)
}

func (t_ TableViewDelegateObject) HasTableViewShouldTypeSelectForEventWithCurrentSearchString() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:shouldTypeSelectForEvent:withCurrentSearchString:"))
}

// Asks the delegate to allow or deny type select for the specified event and current search string. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1526347-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewShouldTypeSelectForEventWithCurrentSearchString(tableView TableView, event Event, searchString string) bool {
	rv := objc.Call[bool](t_, objc.Sel("tableView:shouldTypeSelectForEvent:withCurrentSearchString:"), tableView, event, searchString)
	return rv
}

func (t_ TableViewDelegateObject) HasTableViewToolTipForCellRectTableColumnRowMouseLocation() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:"))
}

// Asks the delegate for a string to display in a tooltip for the specified cell in the column and row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1526097-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewToolTipForCellRectTableColumnRowMouseLocation(tableView TableView, cell Cell, rect foundation.RectPointer, tableColumn TableColumn, row int, mouseLocation foundation.Point) string {
	rv := objc.Call[string](t_, objc.Sel("tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:"), tableView, cell, rect, tableColumn, row, mouseLocation)
	return rv
}

func (t_ TableViewDelegateObject) HasTableViewColumnDidResize() bool {
	return t_.RespondsToSelector(objc.Sel("tableViewColumnDidResize:"))
}

// Tells the delegate that a table column was resized. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1535901-tableviewcolumndidresize?language=objc
func (t_ TableViewDelegateObject) TableViewColumnDidResize(notification foundation.Notification) {
	objc.Call[objc.Void](t_, objc.Sel("tableViewColumnDidResize:"), notification)
}

func (t_ TableViewDelegateObject) HasTableViewHeightOfRow() bool {
	return t_.RespondsToSelector(objc.Sel("tableView:heightOfRow:"))
}

// Asks the delegate for the height of the specified row. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nstableviewdelegate/1529684-tableview?language=objc
func (t_ TableViewDelegateObject) TableViewHeightOfRow(tableView TableView, row int) float64 {
	rv := objc.Call[float64](t_, objc.Sel("tableView:heightOfRow:"), tableView, row)
	return rv
}
