// Code generated by DarwinKit. DO NOT EDIT.

package appkit

import (
	"github.com/progrium/darwinkit/objc"
)

// A delegate for a custom rotor that finds the next item result after performing a search with the specified search parameters. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nsaccessibilitycustomrotoritemsearchdelegate?language=objc
type PAccessibilityCustomRotorItemSearchDelegate interface {
	// optional
	RotorResultForSearchParameters(rotor AccessibilityCustomRotor, searchParameters AccessibilityCustomRotorSearchParameters) AccessibilityCustomRotorItemResult
	HasRotorResultForSearchParameters() bool
}

// A delegate implementation builder for the [PAccessibilityCustomRotorItemSearchDelegate] protocol.
type AccessibilityCustomRotorItemSearchDelegate struct {
	_RotorResultForSearchParameters func(rotor AccessibilityCustomRotor, searchParameters AccessibilityCustomRotorSearchParameters) AccessibilityCustomRotorItemResult
}

func (di *AccessibilityCustomRotorItemSearchDelegate) HasRotorResultForSearchParameters() bool {
	return di._RotorResultForSearchParameters != nil
}

// Performs a search with the specified search parameters and returns the item result. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nsaccessibilitycustomrotoritemsearchdelegate/2876324-rotor?language=objc
func (di *AccessibilityCustomRotorItemSearchDelegate) SetRotorResultForSearchParameters(f func(rotor AccessibilityCustomRotor, searchParameters AccessibilityCustomRotorSearchParameters) AccessibilityCustomRotorItemResult) {
	di._RotorResultForSearchParameters = f
}

// Performs a search with the specified search parameters and returns the item result. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nsaccessibilitycustomrotoritemsearchdelegate/2876324-rotor?language=objc
func (di *AccessibilityCustomRotorItemSearchDelegate) RotorResultForSearchParameters(rotor AccessibilityCustomRotor, searchParameters AccessibilityCustomRotorSearchParameters) AccessibilityCustomRotorItemResult {
	return di._RotorResultForSearchParameters(rotor, searchParameters)
}

// ensure impl type implements protocol interface
var _ PAccessibilityCustomRotorItemSearchDelegate = (*AccessibilityCustomRotorItemSearchDelegateObject)(nil)

// A concrete type for the [PAccessibilityCustomRotorItemSearchDelegate] protocol.
type AccessibilityCustomRotorItemSearchDelegateObject struct {
	objc.Object
}

func (a_ AccessibilityCustomRotorItemSearchDelegateObject) HasRotorResultForSearchParameters() bool {
	return a_.RespondsToSelector(objc.Sel("rotor:resultForSearchParameters:"))
}

// Performs a search with the specified search parameters and returns the item result. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nsaccessibilitycustomrotoritemsearchdelegate/2876324-rotor?language=objc
func (a_ AccessibilityCustomRotorItemSearchDelegateObject) RotorResultForSearchParameters(rotor AccessibilityCustomRotor, searchParameters AccessibilityCustomRotorSearchParameters) AccessibilityCustomRotorItemResult {
	rv := objc.Call[AccessibilityCustomRotorItemResult](a_, objc.Sel("rotor:resultForSearchParameters:"), rotor, searchParameters)
	return rv
}
