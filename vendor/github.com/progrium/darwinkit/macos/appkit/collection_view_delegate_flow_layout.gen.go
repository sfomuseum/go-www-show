// Code generated by DarwinKit. DO NOT EDIT.

package appkit

import (
	"github.com/progrium/darwinkit/macos/foundation"
	"github.com/progrium/darwinkit/objc"
)

// A set of methods that a delegate implements to provide layout information to a flow layout object in a collection view. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nscollectionviewdelegateflowlayout?language=objc
type PCollectionViewDelegateFlowLayout interface {
	// optional
	CollectionViewLayoutReferenceSizeForHeaderInSection(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) foundation.Size
	HasCollectionViewLayoutReferenceSizeForHeaderInSection() bool

	// optional
	CollectionViewLayoutSizeForItemAtIndexPath(collectionView CollectionView, collectionViewLayout CollectionViewLayout, indexPath foundation.IndexPath) foundation.Size
	HasCollectionViewLayoutSizeForItemAtIndexPath() bool

	// optional
	CollectionViewLayoutInsetForSectionAtIndex(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) foundation.EdgeInsets
	HasCollectionViewLayoutInsetForSectionAtIndex() bool

	// optional
	CollectionViewLayoutMinimumLineSpacingForSectionAtIndex(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) float64
	HasCollectionViewLayoutMinimumLineSpacingForSectionAtIndex() bool

	// optional
	CollectionViewLayoutReferenceSizeForFooterInSection(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) foundation.Size
	HasCollectionViewLayoutReferenceSizeForFooterInSection() bool

	// optional
	CollectionViewLayoutMinimumInteritemSpacingForSectionAtIndex(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) float64
	HasCollectionViewLayoutMinimumInteritemSpacingForSectionAtIndex() bool
}

// A delegate implementation builder for the [PCollectionViewDelegateFlowLayout] protocol.
type CollectionViewDelegateFlowLayout struct {
	_CollectionViewLayoutReferenceSizeForHeaderInSection          func(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) foundation.Size
	_CollectionViewLayoutSizeForItemAtIndexPath                   func(collectionView CollectionView, collectionViewLayout CollectionViewLayout, indexPath foundation.IndexPath) foundation.Size
	_CollectionViewLayoutInsetForSectionAtIndex                   func(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) foundation.EdgeInsets
	_CollectionViewLayoutMinimumLineSpacingForSectionAtIndex      func(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) float64
	_CollectionViewLayoutReferenceSizeForFooterInSection          func(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) foundation.Size
	_CollectionViewLayoutMinimumInteritemSpacingForSectionAtIndex func(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) float64
}

func (di *CollectionViewDelegateFlowLayout) HasCollectionViewLayoutReferenceSizeForHeaderInSection() bool {
	return di._CollectionViewLayoutReferenceSizeForHeaderInSection != nil
}

// Asks the delegate for the size of the header view in the specified section. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nscollectionviewdelegateflowlayout/1402876-collectionview?language=objc
func (di *CollectionViewDelegateFlowLayout) SetCollectionViewLayoutReferenceSizeForHeaderInSection(f func(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) foundation.Size) {
	di._CollectionViewLayoutReferenceSizeForHeaderInSection = f
}

// Asks the delegate for the size of the header view in the specified section. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nscollectionviewdelegateflowlayout/1402876-collectionview?language=objc
func (di *CollectionViewDelegateFlowLayout) CollectionViewLayoutReferenceSizeForHeaderInSection(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) foundation.Size {
	return di._CollectionViewLayoutReferenceSizeForHeaderInSection(collectionView, collectionViewLayout, section)
}
func (di *CollectionViewDelegateFlowLayout) HasCollectionViewLayoutSizeForItemAtIndexPath() bool {
	return di._CollectionViewLayoutSizeForItemAtIndexPath != nil
}

// Asks the delegate for the size of the specified item. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nscollectionviewdelegateflowlayout/1402900-collectionview?language=objc
func (di *CollectionViewDelegateFlowLayout) SetCollectionViewLayoutSizeForItemAtIndexPath(f func(collectionView CollectionView, collectionViewLayout CollectionViewLayout, indexPath foundation.IndexPath) foundation.Size) {
	di._CollectionViewLayoutSizeForItemAtIndexPath = f
}

// Asks the delegate for the size of the specified item. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nscollectionviewdelegateflowlayout/1402900-collectionview?language=objc
func (di *CollectionViewDelegateFlowLayout) CollectionViewLayoutSizeForItemAtIndexPath(collectionView CollectionView, collectionViewLayout CollectionViewLayout, indexPath foundation.IndexPath) foundation.Size {
	return di._CollectionViewLayoutSizeForItemAtIndexPath(collectionView, collectionViewLayout, indexPath)
}
func (di *CollectionViewDelegateFlowLayout) HasCollectionViewLayoutInsetForSectionAtIndex() bool {
	return di._CollectionViewLayoutInsetForSectionAtIndex != nil
}

// Asks the delegate for the margins to apply to content in the specified section. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nscollectionviewdelegateflowlayout/1402874-collectionview?language=objc
func (di *CollectionViewDelegateFlowLayout) SetCollectionViewLayoutInsetForSectionAtIndex(f func(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) foundation.EdgeInsets) {
	di._CollectionViewLayoutInsetForSectionAtIndex = f
}

// Asks the delegate for the margins to apply to content in the specified section. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nscollectionviewdelegateflowlayout/1402874-collectionview?language=objc
func (di *CollectionViewDelegateFlowLayout) CollectionViewLayoutInsetForSectionAtIndex(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) foundation.EdgeInsets {
	return di._CollectionViewLayoutInsetForSectionAtIndex(collectionView, collectionViewLayout, section)
}
func (di *CollectionViewDelegateFlowLayout) HasCollectionViewLayoutMinimumLineSpacingForSectionAtIndex() bool {
	return di._CollectionViewLayoutMinimumLineSpacingForSectionAtIndex != nil
}

// Asks the delegate for the spacing between successive rows or columns of a section. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nscollectionviewdelegateflowlayout/1402887-collectionview?language=objc
func (di *CollectionViewDelegateFlowLayout) SetCollectionViewLayoutMinimumLineSpacingForSectionAtIndex(f func(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) float64) {
	di._CollectionViewLayoutMinimumLineSpacingForSectionAtIndex = f
}

// Asks the delegate for the spacing between successive rows or columns of a section. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nscollectionviewdelegateflowlayout/1402887-collectionview?language=objc
func (di *CollectionViewDelegateFlowLayout) CollectionViewLayoutMinimumLineSpacingForSectionAtIndex(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) float64 {
	return di._CollectionViewLayoutMinimumLineSpacingForSectionAtIndex(collectionView, collectionViewLayout, section)
}
func (di *CollectionViewDelegateFlowLayout) HasCollectionViewLayoutReferenceSizeForFooterInSection() bool {
	return di._CollectionViewLayoutReferenceSizeForFooterInSection != nil
}

// Asks the delegate for the size of the footer view in the specified section. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nscollectionviewdelegateflowlayout/1402883-collectionview?language=objc
func (di *CollectionViewDelegateFlowLayout) SetCollectionViewLayoutReferenceSizeForFooterInSection(f func(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) foundation.Size) {
	di._CollectionViewLayoutReferenceSizeForFooterInSection = f
}

// Asks the delegate for the size of the footer view in the specified section. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nscollectionviewdelegateflowlayout/1402883-collectionview?language=objc
func (di *CollectionViewDelegateFlowLayout) CollectionViewLayoutReferenceSizeForFooterInSection(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) foundation.Size {
	return di._CollectionViewLayoutReferenceSizeForFooterInSection(collectionView, collectionViewLayout, section)
}
func (di *CollectionViewDelegateFlowLayout) HasCollectionViewLayoutMinimumInteritemSpacingForSectionAtIndex() bool {
	return di._CollectionViewLayoutMinimumInteritemSpacingForSectionAtIndex != nil
}

// Asks the delegate for the spacing between successive items of a single row or column. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nscollectionviewdelegateflowlayout/1402879-collectionview?language=objc
func (di *CollectionViewDelegateFlowLayout) SetCollectionViewLayoutMinimumInteritemSpacingForSectionAtIndex(f func(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) float64) {
	di._CollectionViewLayoutMinimumInteritemSpacingForSectionAtIndex = f
}

// Asks the delegate for the spacing between successive items of a single row or column. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nscollectionviewdelegateflowlayout/1402879-collectionview?language=objc
func (di *CollectionViewDelegateFlowLayout) CollectionViewLayoutMinimumInteritemSpacingForSectionAtIndex(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) float64 {
	return di._CollectionViewLayoutMinimumInteritemSpacingForSectionAtIndex(collectionView, collectionViewLayout, section)
}

// ensure impl type implements protocol interface
var _ PCollectionViewDelegateFlowLayout = (*CollectionViewDelegateFlowLayoutObject)(nil)

// A concrete type for the [PCollectionViewDelegateFlowLayout] protocol.
type CollectionViewDelegateFlowLayoutObject struct {
	objc.Object
}

func (c_ CollectionViewDelegateFlowLayoutObject) HasCollectionViewLayoutReferenceSizeForHeaderInSection() bool {
	return c_.RespondsToSelector(objc.Sel("collectionView:layout:referenceSizeForHeaderInSection:"))
}

// Asks the delegate for the size of the header view in the specified section. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nscollectionviewdelegateflowlayout/1402876-collectionview?language=objc
func (c_ CollectionViewDelegateFlowLayoutObject) CollectionViewLayoutReferenceSizeForHeaderInSection(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) foundation.Size {
	rv := objc.Call[foundation.Size](c_, objc.Sel("collectionView:layout:referenceSizeForHeaderInSection:"), collectionView, collectionViewLayout, section)
	return rv
}

func (c_ CollectionViewDelegateFlowLayoutObject) HasCollectionViewLayoutSizeForItemAtIndexPath() bool {
	return c_.RespondsToSelector(objc.Sel("collectionView:layout:sizeForItemAtIndexPath:"))
}

// Asks the delegate for the size of the specified item. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nscollectionviewdelegateflowlayout/1402900-collectionview?language=objc
func (c_ CollectionViewDelegateFlowLayoutObject) CollectionViewLayoutSizeForItemAtIndexPath(collectionView CollectionView, collectionViewLayout CollectionViewLayout, indexPath foundation.IndexPath) foundation.Size {
	rv := objc.Call[foundation.Size](c_, objc.Sel("collectionView:layout:sizeForItemAtIndexPath:"), collectionView, collectionViewLayout, indexPath)
	return rv
}

func (c_ CollectionViewDelegateFlowLayoutObject) HasCollectionViewLayoutInsetForSectionAtIndex() bool {
	return c_.RespondsToSelector(objc.Sel("collectionView:layout:insetForSectionAtIndex:"))
}

// Asks the delegate for the margins to apply to content in the specified section. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nscollectionviewdelegateflowlayout/1402874-collectionview?language=objc
func (c_ CollectionViewDelegateFlowLayoutObject) CollectionViewLayoutInsetForSectionAtIndex(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) foundation.EdgeInsets {
	rv := objc.Call[foundation.EdgeInsets](c_, objc.Sel("collectionView:layout:insetForSectionAtIndex:"), collectionView, collectionViewLayout, section)
	return rv
}

func (c_ CollectionViewDelegateFlowLayoutObject) HasCollectionViewLayoutMinimumLineSpacingForSectionAtIndex() bool {
	return c_.RespondsToSelector(objc.Sel("collectionView:layout:minimumLineSpacingForSectionAtIndex:"))
}

// Asks the delegate for the spacing between successive rows or columns of a section. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nscollectionviewdelegateflowlayout/1402887-collectionview?language=objc
func (c_ CollectionViewDelegateFlowLayoutObject) CollectionViewLayoutMinimumLineSpacingForSectionAtIndex(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) float64 {
	rv := objc.Call[float64](c_, objc.Sel("collectionView:layout:minimumLineSpacingForSectionAtIndex:"), collectionView, collectionViewLayout, section)
	return rv
}

func (c_ CollectionViewDelegateFlowLayoutObject) HasCollectionViewLayoutReferenceSizeForFooterInSection() bool {
	return c_.RespondsToSelector(objc.Sel("collectionView:layout:referenceSizeForFooterInSection:"))
}

// Asks the delegate for the size of the footer view in the specified section. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nscollectionviewdelegateflowlayout/1402883-collectionview?language=objc
func (c_ CollectionViewDelegateFlowLayoutObject) CollectionViewLayoutReferenceSizeForFooterInSection(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) foundation.Size {
	rv := objc.Call[foundation.Size](c_, objc.Sel("collectionView:layout:referenceSizeForFooterInSection:"), collectionView, collectionViewLayout, section)
	return rv
}

func (c_ CollectionViewDelegateFlowLayoutObject) HasCollectionViewLayoutMinimumInteritemSpacingForSectionAtIndex() bool {
	return c_.RespondsToSelector(objc.Sel("collectionView:layout:minimumInteritemSpacingForSectionAtIndex:"))
}

// Asks the delegate for the spacing between successive items of a single row or column. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/appkit/nscollectionviewdelegateflowlayout/1402879-collectionview?language=objc
func (c_ CollectionViewDelegateFlowLayoutObject) CollectionViewLayoutMinimumInteritemSpacingForSectionAtIndex(collectionView CollectionView, collectionViewLayout CollectionViewLayout, section int) float64 {
	rv := objc.Call[float64](c_, objc.Sel("collectionView:layout:minimumInteritemSpacingForSectionAtIndex:"), collectionView, collectionViewLayout, section)
	return rv
}
