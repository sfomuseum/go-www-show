// Code generated by DarwinKit. DO NOT EDIT.

package appkit

import (
	"github.com/progrium/darwinkit/objc"
)

// A protocol used to provide information about the layoutâ€™s container and environment traits, such as size classes and display scale factor. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/uikit/nscollectionlayoutenvironment?language=objc
type PCollectionLayoutEnvironment interface {
	// optional
	Container() CollectionLayoutContainerObject
	HasContainer() bool
}

// ensure impl type implements protocol interface
var _ PCollectionLayoutEnvironment = (*CollectionLayoutEnvironmentObject)(nil)

// A concrete type for the [PCollectionLayoutEnvironment] protocol.
type CollectionLayoutEnvironmentObject struct {
	objc.Object
}

func (c_ CollectionLayoutEnvironmentObject) HasContainer() bool {
	return c_.RespondsToSelector(objc.Sel("container"))
}

// Information about the layout's container, such as its size and content insets. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/uikit/nscollectionlayoutenvironment/3199073-container?language=objc
func (c_ CollectionLayoutEnvironmentObject) Container() CollectionLayoutContainerObject {
	rv := objc.Call[CollectionLayoutContainerObject](c_, objc.Sel("container"))
	return rv
}
