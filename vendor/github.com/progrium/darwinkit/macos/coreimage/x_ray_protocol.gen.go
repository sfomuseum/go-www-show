// Code generated by DarwinKit. DO NOT EDIT.

package coreimage

import (
	"github.com/progrium/darwinkit/objc"
)

// The properties you use to configure an X-ray filter. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cixray?language=objc
type PXRay interface {
	// optional
	SetInputImage(value Image)
	HasSetInputImage() bool

	// optional
	InputImage() Image
	HasInputImage() bool
}

// ensure impl type implements protocol interface
var _ PXRay = (*XRayObject)(nil)

// A concrete type for the [PXRay] protocol.
type XRayObject struct {
	objc.Object
}

func (x_ XRayObject) HasSetInputImage() bool {
	return x_.RespondsToSelector(objc.Sel("setInputImage:"))
}

// The image to use as an input image. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cixray/3228839-inputimage?language=objc
func (x_ XRayObject) SetInputImage(value Image) {
	objc.Call[objc.Void](x_, objc.Sel("setInputImage:"), value)
}

func (x_ XRayObject) HasInputImage() bool {
	return x_.RespondsToSelector(objc.Sel("inputImage"))
}

// The image to use as an input image. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/coreimage/cixray/3228839-inputimage?language=objc
func (x_ XRayObject) InputImage() Image {
	rv := objc.Call[Image](x_, objc.Sel("inputImage"))
	return rv
}
