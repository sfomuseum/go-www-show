// Code generated by DarwinKit. DO NOT EDIT.

package foundation

import (
	"github.com/progrium/darwinkit/objc"
)

// The interface an app extension uses to respond to a request from a host app. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/foundation/nsextensionrequesthandling?language=objc
type PExtensionRequestHandling interface {
	// optional
	BeginRequestWithExtensionContext(context ExtensionContext)
	HasBeginRequestWithExtensionContext() bool
}

// ensure impl type implements protocol interface
var _ PExtensionRequestHandling = (*ExtensionRequestHandlingObject)(nil)

// A concrete type for the [PExtensionRequestHandling] protocol.
type ExtensionRequestHandlingObject struct {
	objc.Object
}

func (e_ ExtensionRequestHandlingObject) HasBeginRequestWithExtensionContext() bool {
	return e_.RespondsToSelector(objc.Sel("beginRequestWithExtensionContext:"))
}

// Tells the extension to prepare for a host appâ€™s request. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/foundation/nsextensionrequesthandling/1413395-beginrequestwithextensioncontext?language=objc
func (e_ ExtensionRequestHandlingObject) BeginRequestWithExtensionContext(context ExtensionContext) {
	objc.Call[objc.Void](e_, objc.Sel("beginRequestWithExtensionContext:"), context)
}
